var express = require("express");
var firebase = require("firebase");
var bodyParser = require("body-parser");
var url = require("url");
var User = require("./User.js");
var port = process.env.PORT || 3000;
var path = require("path");
var app = express();

app.use(express.static(path.join(__dirname, "static")));
app.use(bodyParser.json()); // to support JSON-encoded bodies
app.use(
  bodyParser.urlencoded({
    // to support URL-encoded bodies
    extended: true
  })
);

const config = JSON.parse(process.env.firebaseConfig);
firebase.initializeApp(config);

app.get("/", function(req, res) {
  res.send("Hello World");
});

app.get("/Meet", function(req, res) {
  res.sendFile(__dirname + "/static/Meet.html");
});

// Open Loading Screen after getting coordinates
app.post("/Meet", function(req, res) {
  // Put Coordinate and Movie in the Database along with User Name
  let database = firebase.database();
  let dbRef = database.ref();
  let movie = req.body.movie;
  let emailId = req.body.email;
  let coordinates = req.body.coordinates;

  // Get Node with all users
  let MovieRef = dbRef.child("Movie").child(movie);
  console.log("hello");
  // Order List by EmailId and search for email id of user
  var MovieInfo = { Movie: movie, EmailId: emailId, Coordinates: coordinates, Seen:null };
  MovieRef.orderByChild("EmailId")
    .equalTo(emailId)
    .once("value", function(snapshot) {
      let movieKey = null;
      if (!snapshot.exists()) {
        movieKey = MovieRef.push().key;
      } else {
        movieKey = Object.keys(snapshot.val())[0]; // Unique for the particular movie entry generated by firebase
      }
      let movieObject = {};
      movieObject["/Movie/" + movie + "/" + movieKey] = MovieInfo;
      // Update the Movie enteries
      firebase
        .database()
        .ref()
        .update(movieObject, function() {
          console.log("Movie Details Updated/Added Successfully");
        });
    });

  let Url = url.format({
    pathname: "/Meet",
    query: {
      email: emailId,
      movie: movie
    }
  });

  // Go to Meet.html
  res.json({ redirect: Url });
});

app.get("/Loading", function(req, res) {
  res.sendFile(__dirname + "/static/Loading.html");
});

app.post("/coordinates", function(req, res) {
  // Retrieve the two coordinates take average and send it into a JSON
  let startTime = new Date().getTime();
  let emailId = req.body.email;
  let movie = req.body.movie;

  let database = firebase.database();
  let dbRef = database.ref();
  // Get Node with all users
  let coordinateRef = dbRef.child("Movie").child(movie);
  // Returns Promise
  // Order List by EmailId and search for email id of user

  coordinateRef
    .orderByChild("Movie") // Find by Movie
    .once("value", function(snapshot) {
      while (new Date().getTime() - startTime < 30000) {
        if (snapshot.exists() && Object.keys(snapshot.val()).length > 1) {
          let allKeys = Object.keys(snapshot.val());
          let i = -1;
          while (snapshot.child(allKeys[i]).val().EmailId !== emailId) {
            i = Math.floor(Math.random() * allKeys.length);
          }
          let pairUserKey = allKeys[i];
          i = -1;
          while (snapshot.child(allKeys[i]).val().EmailId === emailId) {
            i = i+1;
          }
          let currentUserKey = allKeys[i];

          let CurrentUser = snapshot.child(currentUserKey).val();
          let PairUser = snapshot.child(pairUserKey).val();
          
          let meet_latitude = (CurrentUser.coordinates.latitude + PairUser.coordinates.latitude)/2.0;
          let meet_longitude = (CurrentUser.coordinates.longitude + PairUser.coordinates.longitude)/2.0;
          
          MeetInfo = {Movie: movie, Coordinates:{latitude: meet_latitude, longitude: meet_longitude}, Users:[CurrentUser.EmailId,PairUser.EmailId]}

          let MeetRef = dbRef.child("Meets").child(movie);
          
          let meetkey
          MeetRef.orderByChild(Movie).equalTo(movie).once("value", function(snapshot) {
            if(!snapshot.exists()){
              meetkey = MovieRef.push().key;
            }
            else{
              meetkey = Object.keys(snapshot.val())[0]; // Unique for the particular movie entry generated by firebase
            }
            let meetObject = {};
            meetObject["/Meets/" + movie + "/" + meetKey] = MovieInfo;
            // Update the Movie enteries
            firebase
              .database()
              .ref()
              .update(meetObject, function() {
                console.log("Meet Details Updated/Added Successfully");
              });
          });

          let temp = {};
          temp["/Movie/" + movie + "/"+ currentUserKey] = null;
          firebase
          .database()
          .ref()
          .update(temp, function() {
            console.log("Meet Details Updated/Added Successfully");
          });
          
          temp = {}
          temp["/Movie/" + movie + "/"+ pairUserKey] = null;

          firebase
          .database()
          .ref()
          .update(temp, function() {
            console.log("Meet Details Updated/Added Successfully");
          });
          res.json({key: meetKey});
          break;
        }
      }
      // For Each Snapshort Resolve Promise Firebase does not know if there is only entry after search
    });
    res.json({key: null});
});

app.listen(port, function() {
  console.log(`Example app listening on port !`);
});
