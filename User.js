var firebase = require("firebase");

class User {
  // Constructor without image
  constructor(FullName, EmailId, Description, Movies) {
    this.FullName = FullName;
    this.EmailId = EmailId;
    this.Description = Description;
    this.Movies = Movies;
  }
  // Constructor with image
  // constructor(FullName,EmailId,Description,Movies,Image){
  // 	this.FullName = FullName;
  // 	this.EmailId = EmailId;
  // 	this.Description = Description;
  // 	this.Movies=Movies;
  // 	this.Image = Image;
  // }

  //Get Full Name of User
  getFullname() {
    return this.FullName;
  }

  // Set Full Name of User
  setFullname(name) {
    this.FullName = name;
  }

  // Get Email ID of User
  getEmailId() {
    return this.EmailId;
  }

  // Set Email ID of User
  setEmailId(email) {
    this.EmailId = email;
  }

  // Get Description of User
  getDescription() {
    return this.Description;
  }

  // Set Description of User
  setDescription(description) {
    this.Description = description;
  }

  // Get Movies of User
  getMovies() {
    return this.Movies;
  }

  // Set Movies of User
  setMovies(movies) {
    this.Movies = movies;
  }

  // Get Image of User
  getImage() {
    return this.Image;
  }

  // Set Image of User
  setImage(image) {
    this.Image = image;
  }

  // To JSON
  toJSON() {
    return {
      FullName: this.FullName,
      EmailId: this.EmailId,
      Description: this.Description,
      Movies: this.Movies
    };
  }

  // New User to Firebase Database
  PushToUserDatabase() {
    let database = firebase.database();
    let dbRef = database.ref();
    // Get Node with all users
    let usersRef = dbRef.child("users");
    // Get Unique Key for New User
    let newUserkey = usersRef.push().key;

    let userObject = {};
    // Construct JSON Object for User
    userObject["/users/" + newUserkey] = this.toJSON();
    // Call Update on Object
    dbRef.update(userObject, function() {
      console.log("User Successfully Updated\n"); // Optional callback for success
    });
  }

  // Change User in Firebase Database
  UpdateUserDatabase() {
    let database = firebase.database();
    let dbRef = database.ref();
    // Get Node with all users
    let usersRef = dbRef.child("users");
    // Order List by EmailId and search for email id of user
    var userInfo = this.toJSON();
    usersRef
      .orderByChild("EmailId")
      .equalTo(this.EmailId)
      .once("value", function(snapshot) {
        let userObject = {};
        let key = Object.keys(snapshot.val())[0]; // Unique for the particular user entry generated by firebase
        userObject["/users/" + key] = userInfo;
        // Update the user enteries
        firebase
          .database()
          .ref()
          .update(userObject, function() {
            console.log("User Details Updated Successfully");
          });
      });
  }

  // Delete User in Firebase Database
  DeleteUserDatabase() {
    let database = firebase.database();
    let dbRef = database.ref();
    // Get Node with all users
    let usersRef = dbRef.child("users");
    // Order List by EmailId and search for email id of user
    usersRef
      .orderByChild("EmailId")
      .equalTo(this.EmailId)
      .once("value", function(snapshot) {
        let userObject = {};
        let key = Object.keys(snapshot.val())[0]; // Unique for the particular user entry generated by firebase
        userObject["/users/" + key] = null;
        // Update the user enteries
        firebase
          .database()
          .ref()
          .update(userObject, function() {
            console.log("User Details Deleted Successfully");
          });
      });
  }

  // Get User Information from Database
  static getUserDatabase(emailId) {
    let database = firebase.database();
    let dbRef = database.ref();
    // Get Node with all users
    let usersRef = dbRef.child("users");

    // Returns Promise
    return new Promise(function(resolve, reject) {
      // Order List by EmailId and search for email id of user
      usersRef
        .orderByChild("EmailId")
        .equalTo(emailId)
        .once("value", function(snapshot) {
          // For Each Snapshort Resolve Promise Firebase does not know if there is only entry after search
          snapshot.forEach(function(childSnapshot) {
			let value = childSnapshot.val();
			// Create User Object
            let user = new User(
              value.FullName,
              value.EmailId,
              value.Description,
              value.Movies
			);
			// Resolve Promise 
            resolve(user);
          });
        });
    });
  }
}

module.exports = User;
